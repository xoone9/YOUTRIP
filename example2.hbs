
<!DOCTYPE html>
<html>
   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
      <title>simpleMap</title>
      <script   src="https://code.jquery.com/jquery-3.2.1.min.js"></script>
      <script src="https://apis.openapi.sk.com/tmap/jsv2?version=1&appKey=l7xx2115cd818b124c4e837ace6423fedb4f"></script>
      <script type="text/javascript"
            src="//dapi.kakao.com/v2/maps/sdk.js?appkey=5a6b4e5b0845903f4703ff9bc47275f2&libraries=services"></script>
      <script type="text/javascript">
            
                 
         var marker_s, marekr_e, waypoint;
         var resultMarkerArr = [];
         //경로그림정보
         var drawInfoArr = [];
         var resultInfoArr = [];
         
         function initTmap(){
            resultMarkerArr = [];
            
             // 1. 지도 띄우기
            var mapContainer = document.getElementById('map'), // 지도를 표시할 div 
                mapOption = {
                    center: new kakao.maps.LatLng(37.566826, 126.9786567), // 지도의 중심좌표
                    level: 3 // 지도의 확대 레벨
                };

            // 지도를 생성합니다    
            var map = new kakao.maps.Map(mapContainer, mapOption);
            
            // 2. 시작, 도착 심볼찍기
            // 시작
            marker_s = new Tmapv2.Marker({
               position : new Tmapv2.LatLng(37.402688, 127.103259),
               icon : "http://tmapapis.sktelecom.com/upload/tmap/marker/pin_r_m_s.png",
               iconSize : new Tmapv2.Size(24, 38),
               map:map
            });
            resultMarkerArr.push(marker_s);
            // 도착
            marker_e = new Tmapv2.Marker({
               position : new Tmapv2.LatLng(37.414382, 127.142571),
               icon : "http://tmapapis.sktelecom.com/upload/tmap/marker/pin_r_m_e.png",
               iconSize : new Tmapv2.Size(24, 38),
               map:map
            });
            resultMarkerArr.push(marker_e);
            
            // 3. 경유지 심볼 찍기
            
            // 4. 경로탐색 API 사용요청
            var routeLayer; 
         
               var searchOption = 0;
               
               var headers = {}; 
               headers["appKey"]="l7xx2115cd818b124c4e837ace6423fedb4f";
               headers["Content-Type"]="application/json";
               
               var param = JSON.stringify({
                  "startName" : "출발지",
                  "startX" : "127.103259",
                  "startY" : "37.402688",
                  "startTime" : "201708081103",
                  "endName" : "도착지",
                  "endX" : "127.142571",
                  "endY" : "37.414382",
                  "viaPoints" : 
                     [
                      {
                         "viaPointId" : "test07",
                         "viaPointName" : "name07",
                         "viaX" : "127.142571" ,
                         "viaY" : "37.414382" 
                      }
                     ],
                  "reqCoordType" : "WGS84GEO",
                  "resCoordType" : "EPSG3857",
                  "searchOption": searchOption
               });
               
               $.ajax({
                     method:"POST",
                     url:"https://apis.openapi.sk.com/tmap/routes/routeSequential30?version=1&format=json",//
                     headers : headers,
                     async:false,
                     data:param,
                     success:function(response){
         
                        var resultData = response.properties;
                        var resultFeatures = response.features;
                        
                        //기존  라인 초기화
                        
                        if(resultInfoArr.length>0){
                           for(var i in resultInfoArr){
                              resultInfoArr[i].setMap(null);
                           }
                           resultInfoArr=[];
                        }
                        
                        for(var i in resultFeatures) {
                           var geometry = resultFeatures[i].geometry;
                           var properties = resultFeatures[i].properties;
                           var polyline_;
                           
                           drawInfoArr = [];
                           
                           if(geometry.type == "LineString") {
                              for(var j in geometry.coordinates){
                                 // 경로들의 결과값(구간)들을 포인트 객체로 변환 
                                 var latlng = new Tmapv2.Point(geometry.coordinates[j][0], geometry.coordinates[j][1]);
                                 // 포인트 객체를 받아 좌표값으로 변환
                                 var convertPoint = new Tmapv2.Projection.convertEPSG3857ToWGS84GEO(latlng);
                                 // 포인트객체의 정보로 좌표값 변환 객체로 저장
                                 var convertChange = new Tmapv2.LatLng(convertPoint._lat, convertPoint._lng);
                                 
                                 drawInfoArr.push(convertChange);
                              }
         
                              polyline_ = new Tmapv2.Polyline({
                                 path : drawInfoArr,
                                 strokeColor : "#FF0000",
                                 strokeWeight: 6,
                                 map : map
                              });
                              resultInfoArr.push(polyline_);
                              
                           }else{
                              var markerImg = "";
                              var size = "";         //아이콘 크기 설정합니다.
                              
                              if(properties.pointType == "S"){   //출발지 마커
                                 markerImg = "http://tmapapis.sktelecom.com/upload/tmap/marker/pin_r_m_s.png";   
                                 size = new Tmapv2.Size(24, 38);
                              }else if(properties.pointType == "E"){   //도착지 마커
                                 markerImg = "http://tmapapis.sktelecom.com/upload/tmap/marker/pin_r_m_e.png";
                                 size = new Tmapv2.Size(24, 38);
                              }else{   //각 포인트 마커
                                 markerImg = "http://topopen.tmap.co.kr/imgs/point.png";
                                 size = new Tmapv2.Size(8, 8);
                              }
                              
                              // 경로들의 결과값들을 포인트 객체로 변환 
                              var latlon = new Tmapv2.Point(geometry.coordinates[0], geometry.coordinates[1]);
                              // 포인트 객체를 받아 좌표값으로 다시 변환
                              var convertPoint = new Tmapv2.Projection.convertEPSG3857ToWGS84GEO(latlon);
                                
                                marker_p = new Tmapv2.Marker({
                                   position: new Tmapv2.LatLng(convertPoint._lat, convertPoint._lng),
                                   icon : markerImg,
                                   iconSize : size,
                                   map:map
                                });
                                
                                resultMarkerArr.push(marker_p);
                           }
                        }
                     },
                     error:function(request,status,error){
                        console.log("code:"+request.status+"\n"+"message:"+request.responseText+"\n"+"error:"+error);
                     }
                  });
            
         }
         
         function addComma(num) {
              var regexp = /\B(?=(\d{3})+(?!\d))/g;
               return num.toString().replace(regexp, ',');
         }
      </script>
   </head>
   <body onload="initTmap()"><!-- 맵 생성 실행 -->

      
      <div id="map_wrap" class="map_wrap">
         <div id="map" style="width:100%;height:100%;position:relative;overflow:hidden;"></div>
      </div>
   </body>
</html>               
            
            